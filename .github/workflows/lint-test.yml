name: Lint & Test

on:
    push:
        branches:
            - main
    pull_request:

jobs:
    lint-test:
        runs-on: ubuntu-latest
        env:
            # Disable pip cache and do user installs by default.
            PIP_NO_CACHE_DIR: false
            PIP_USER: 1

            PYTHONUSERBASE: ${{ github.workspace }}/.cache/py-user-base
            PRE_COMMIT_HOME: ${{ github.workspace }}/.cache/pre-commit-cache

        steps:
            - name: Add custom PYTHONUSERBASE to PATH
              run: echo '${{ env.PYTHONUSERBASE }}/bin/' >> $GITHUB_PATH

            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Setup Python
              id: python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.9"

            - name: Python cache
              uses: actions/cache@v2
              id: python_cache
              with:
                  path: ${{ env.PYTHONUSERBASE }}
                  key: "python-0-${{ runner.os }}-${{ env.PYTHONUSERBASE }}-\
                      ${{ steps.python.outputs.python-version }}-\
                      ${{ hashFiles('./pyproject.toml', './poetry.lock') }}"

            # Install dependencies if there was a cache miss.
            - name: Install dependencies
              if: steps.python_cache.outputs.cache-hit != 'true'
              run: |
                  pip install poetry
                  poetry install

            - name: Pre-commit cache
              uses: actions/cache@v2
              with:
                  path: ${{ env.PRE_COMMIT_HOME }}
                  key:
                      "precommit-0-${{ runner.os }}-${{ env.PRE_COMMIT_HOME }}-\
                      ${{ steps.python.outputs.python-version }}-\
                      ${{ hashFiles('./.pre-commit-config.yaml') }}"

            # Disable user installs for pre-commit since it doesn't support them.
            - name: Run pre-commit hooks
              run: export PIP_USER=0; SKIP=black pre-commit run --all-files

            - name: Run black
              run: black --check --diff

            - name: Run tests and coverage
              run: |
                  python -Wignore -m coverage run -m pytest
                  coverage report -m
