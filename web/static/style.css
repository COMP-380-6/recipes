/* By default, it's inline. However, Bootstrap displays normal controls as blocks. */
.bootstrap-select {
    display: block !important;
    width: 100% !important;
}

/* Hide the caret since form-select has its own. */
.form-select.dropdown-toggle::after {
    display: none !important;
}

.container {
    max-width: 960px;
}

/*
Normally the gutter uses padding. However, a wrapper element for a col is avoided and the ingredient
class is a direct child of the row. It needs its own padding, so margins have to be used. Changing
the gutter width with gx-* would cause misalignment with adjacent rows. Instead, change divide it
here by 4 rather than by 2.
*/
#ingredients > * {
    margin-right: calc(var(--bs-gutter-x) / 4);
    margin-left: calc(var(--bs-gutter-x) / 4);
    margin-top: var(--bs-gutter-y);
}

/* The gutter on the edges needs to add up to the original width so it aligns with adjacent rows. */
#ingredients {
    padding-right: calc(var(--bs-gutter-x) / 4);
    padding-left: calc(var(--bs-gutter-x) / 4);
}

.ingredient {
    padding: 0.25rem 0.75rem;
    align-items: center;
    flex: 0 0 !important; /* Make the container the size of its content. */
    white-space: nowrap; /* Ensure text is on a single line. */
}

.ingredient .btn-close {
    padding: 0; /* Easier to reason about aligning it when the X directly touches the edges. */
    margin-left: 0.5rem; /* Some space between the text and icon */
    background-size: 0.75rem; /* Make its size closer to the size of the text. */
}

/* Colour the tooltip's arrow the same as inner's border */
.ingredient-tooltip.bs-tooltip-top .tooltip-arrow::before {
    border-top-color: #dee2e6;
}

.ingredient-tooltip.bs-tooltip-bottom .tooltip-arrow::before {
    border-bottom-color: #dee2e6;
}

.ingredient-tooltip.bs-tooltip-start .tooltip-arrow::before {
    border-left-color: #dee2e6;
}

.ingredient-tooltip.bs-tooltip-end .tooltip-arrow::before {
    border-right-color: #dee2e6;
}

.ingredient-tooltip.show {
    opacity: 1;
}

#ingredient-template,
#recipe-template,
#req-ingr-template,
#req-equip-template {
    display: none !important;
}

.recipe {
    /*
    Ensure the width of the stats matches the width of the image, even when the image doesn't
    take up the entire available width (due to maintaining its aspect ratio).
    */
    display: flex;
    justify-content: center;
}

/* Set parent to relative to enabled the use of absolute positioning. */
.text-overlay-container {
    position: relative;
    text-align: center; /* Ensure the image is centered. */
}

.text-overlay {
    z-index: 1;
    visibility: hidden; /* Hide it by default. */
    user-select: none; /* Disable text selection since the element behind may be clickable */
    overflow: hidden;
    pointer-events: none;

    /* Overlay it by using absolute positioning. */
    position: absolute;
    width: 100%;
    height: 100%;

    color: white;
}

/* Display the text on hover. */
.text-overlay-container:hover > .text-overlay {
    visibility: visible;
}

/* Darken the background to make the text stand out. */
.text-overlay-container:hover > img {
    filter: brightness(0.6) contrast(1.1);
}

.recipe-img,
#recipe-modal .modal-footer .page-link {
    cursor: pointer;
}

.req-ingr img,
.req-equip img {
    height: 70px;
    object-fit: contain;
}

#summary-fig {
    font-size: 0.75rem;
}

/*
At the lg threshold, it goes from a max-width of 800 to 500, which is a big jump.
Fill in the gap by using 75% max-width until the md threshold is reached,
which would make the modal full screen.
*/
@media screen and (min-width: 768px) and (max-width: 992px) {
    .modal-lg.modal-fullscreen-md-down {
        max-width: 75%;
    }
}

@media screen and (min-width: 404px) and (max-width: 576px) {
    .row-cols-xs-3 > * {
        flex: 0 0 auto;
        width: calc(100% / 3);
    }
}

#alert .alert {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
}

#alert .alert .btn-close {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
}
